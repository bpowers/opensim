#===--- JIT compilation notes --------------------------------------------===#

I've always wanted to work with JIT compilation because of its possible
performance benefits and (from my point of view) elegance.  I had a
somewhat working backend a year ago, but it was fragile (didn't work on
windows, and worked differently on mac and linux.  in retrospect this was
probably because of different calling conventions).  My current work is
focusing on a robust JIT using LLVM, as well as a playground for my
object-oriented system dynamics ideas.


#===--- general outline --------------------------------------------------===#

- load in runtime from .bc (generated from C file using clang)
- create sim-specific instances of data structures
- create function(s) to create and initialize new sim instances
  - a 'new' function to get a new initialized simulation instance
  - an 'init' function to initialize the stock initial values
    and space for data.
- create functions to both calcuate the flows and update the stocks.
- create and initialize sim instance, pass it to simulate runtime function

the infection.c file has a detailed example of how this will look.

